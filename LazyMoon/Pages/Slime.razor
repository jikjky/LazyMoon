@page "/Slime"
@page "/Slime/{text}"
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage

@using System.Security.Cryptography

<body>
    <div tabindex="0" @onkeydown="KeyDown" @onkeyup="KeyUp" style="width:100vw;height:100vh">
        <LazyMoon.Class.Component.Slime.SlimeComponet X="50" Y="50" Speed="@speed" frameDelay="10" Control="@key" Move="@isMove" />
    </div>
</body>

@code
{
    [Parameter]
    public string Text { get; set; }
    string key = "";
    double speed;
    bool isMove;

    protected override void OnInitialized()
    {
        if (Text != null)
        {
            if (Text.ToUpper().IndexOf("MOVE") != -1)
            {
                Text = Text.Remove(Text.ToUpper().IndexOf("MOVE"), 4);
                isMove = true;
            }

            if (double.TryParse(Text, out speed))
            {
                
            }
            else
            {
                speed = 5;
            }
        }
        else
        {
            speed = 5;
        }

    }

    public void KeyDown(KeyboardEventArgs e)
    {
        if (e.Key != "Process")
        {
            var keyList = key.Split("ㅤ").ToList();
            if (keyList.FirstOrDefault(x => x == e.Key.ToUpper()) == null)
            {
                key += e.Key.ToUpper() + "ㅤ";
            }
        }
        StateHasChanged();
    }
    public void KeyUp(KeyboardEventArgs e)
    {
        var keyList = key.Split("ㅤ").ToList();
        var a = keyList.FirstOrDefault(x => x == e.Key.ToUpper());
        if (a != null)
        {
            keyList.Remove(a);
        }
        key = string.Join("ㅤ", keyList);

        StateHasChanged();
    }
}