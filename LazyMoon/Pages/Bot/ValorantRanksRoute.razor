@page "/Bot/ValorantRanks/{text}"
@inject Class.ValorantRank rank
@inject NavigationManager NavigationManager
@implements IDisposable

<div style="text-align : center;">
    <img src="@image" />
    <h1>@markName</h1>
    <h2>@score</h2>
</div>

@code {
    [Parameter]
    public string Text { get; set; }

    string image;
    string markName;
    string score;

    public class ValorantRating
    {
        public string MarkName;
        public string MarkImage;
    }

    public int ranking;

    public List<ValorantRating> valorantRatings = new List<ValorantRating>();

    protected override async Task OnInitializedAsync()
    {
        Text = Text ?? "jikjky";
        if (Text == "jikjky")
            NavigationManager.NavigateTo("ValorantRanks", true);
        if(rank.SetBot(Text) == false)
            NavigationManager.NavigateTo("", true);
        rank.LoadData(Text);
        rank.OnChangeRank += OnChangeRank;
        rank.GetRank();
        await this.InvokeAsync(new Action(() => { StateHasChanged(); }));
    }

    protected void OnChangeRank(int score, string rank, string path)
    {
        image = path;
        markName = rank;
        this.score = score.ToString();
        this.InvokeAsync(new Action(() => { StateHasChanged(); }));
    }

    void IDisposable.Dispose() => rank.Dispose();
}
