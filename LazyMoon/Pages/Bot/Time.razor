@page "/Bot/Time/{text}"
@layout EmptyLayout
@inject TwitchService TwitchService
@inject NavigationManager NavigationManager
@using System.Timers
@implements IDisposable

<div class="jumbotron">
    <h1 style="text-align:center;">@_Time</h1>
</div>
<div class="jumbotron">
    <h1 style="text-align:center;">@_Uptime</h1>
</div>

@code {
    [Parameter]
    public string Text { get; set; }

    private string id;

    private string _Time = "0000-00-00 00:00:00";
    private string _Uptime = "Uptime : 00:00:00";

    private Timer timer = new Timer(1000);

    protected async override Task OnInitializedAsync()
    {
        Text = Encryption.Encryption.Decrypt(Text);
        if (await TwitchService.ExistUser(Text) == null)
            NavigationManager.NavigateTo(NavigationManager.BaseUri + "Bot");
        id = await TwitchService.GetUserId(Text);
        OnTimerCallback();
        timer.Elapsed += (sender, eventArgs) => OnTimerCallback();
        timer.Start();
    }

    private void OnTimerCallback()
    {
        _Time = DateTime.Now.ToString("yyyy-MM-dd hh\\:mm\\:ss");
        _Uptime = "Uptime : " + TwitchService.GetUptime(id).ToString("hh\\:mm\\:ss");
        this.InvokeAsync(new Action(() => { StateHasChanged(); }));
    }

    void IDisposable.Dispose() => timer.Dispose();
}
